#!/usr/bin/env python
"""
Entrypoint script to dispatch to apache beam if beam is executing
the container, or act like a regular contact when executed in
any other context (like a binder or jupyterhub).

Beam *requires* entrypoint to point to a 'boot' program written
in go. In this container, it is installed in /usr/local/bin/boot.
We detect if beam is calling us and expecting the boot program
to run by checking if the commandline params *required* by the
boot program are present, and calling the boot program if so.
If these arguments are not present, we assume we are not being
called by apache beam, and provide the same behavior as if no
entrypoint is defined.
"""
import os
import sys

# List is provided by running /usr/local/bin/boot, and finding
# the ones marked as 'required'
REQUIRED_BEAM_BOOT_PARAMS = [
    '-id', '-control_endpoint', '-logging_endpoint',
    '-artifact_endpoint', '-provision_endpoint'
]
if all(x in sys.argv for x in REQUIRED_BEAM_BOOT_PARAMS):
    command = '/opt/apache/beam/boot'
else:
    command = sys.argv[1]

os.execvp(command, sys.argv[1:])