# Runs conda-lock against environment.yml for reproducible environments
# Runs on any opened PR
name: CondaLock

on:
  repository_dispatch:
    types: [condalock-command]

jobs:
  condalock:
    strategy:
      fail-fast: false
      matrix: 
        IMAGE: [base-notebook, pangeo-notebook, ml-notebook, pytorch-notebook, forge]
    name: ${{ matrix.IMAGE }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PANGEOBOT_TOKEN }}
          # These lines are critical, otherwise Pangeo-bot pushes changes directly to master from PRs!
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@v15
        with:
          cache-env: true
          environment-file: environment-condalock.yml

      # Could run as single step in parallel, but would complicate logs...
      - name: Run conda-lock ${{ matrix.IMAGE }}
        run: |
          cd ${{ matrix.IMAGE }}
          conda-lock lock -f environment.yml -p linux-64
          conda-lock render -k explicit
          ../generate-packages-list.py conda-linux-64.lock > packages.txt

      # Commit the change to the PR branch (currently fails if no modified files)
      - name: Commit condalock files to PR
        run: |
          git config --global user.name 'pangeo-bot'
          git config --global user.email 'pangeo-bot@users.noreply.github.com'
          git add */conda*.lock */conda-lock.yml */packages.txt
          git commit -m "[condalock-command] autogenerated conda-lock files"
          git push

  # Each job will commit files, so we know it succeeds based on commits
  # base-image:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Add reaction
  #       uses: peter-evans/create-or-update-comment@v2
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
  #         comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
  #         reaction-type: hooray
